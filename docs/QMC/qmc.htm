<!doctype HTML>
<html>
<head>
	<title>Quantum Monte Carlo Simulation</title>

<style>

.bars rect {
  fill: steelblue;
}

.axis text {
  font: 10px sans-serif;
}

.axis path, .axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

</style>

<script type="text/javascript">
var DISP_SIZE_X = 720; //pixels
var DISP_SIZE_Y = 320;
var BUFFER = 30; //pixels

var NBINS = 257;
var X_MAX = 10; //bounds of histogram

var BIN_WIDTH;
var HIST = [];//new Array();
var BINS = [];//new Array();
var HIST_MAX;

var PROCESS = null;
var TIC = new Date().getTime();

var PLOT_SCALE;
var DISPLAY;
var PI2 = 2.0*Math.PI;


function go(){
	DATA.innerHTML = "Warming Up...";
	if(typeof(Worker) !== "undefined"){ //make sure browser supports worker
		if(PROCESS === null){ //make sure worker isn't already running
			PROCESS = new Worker("qmc.js"); //global
			
			PROCESS.onmessage = function(event){

				p = event.data; //path data
				DATA.innerHTML = p.string;
				
				//output actual frame rate
				var tempTic = new Date().getTime();
				DATA.innerHTML += "(" + Math.round(100.0*10.0*1000.0/(tempTic-TIC)) + ' paths/sec)  ';
				TIC = tempTic;
				
				reset();
				updateHistogram(p.hist);
				corrs = p.corrs;
			};

			PROCESS.postMessage({'init':0});

		}else{
			alert('Process is already running.');
		}
	}
	else{
		alert('Sorry! No Web Worker support... try chrome, firefox, or safari');
	}
}

function stop(){
	if(PROCESS !== null){
		PROCESS.terminate();
		PROCESS = null;
	}else{
		alert('No process running.');
	}
}

function initialize(){
	DATA = document.getElementById("DATA");
	var c = document.getElementById("DISPLAY");
	c.width = DISP_SIZE_X;
	c.height = DISP_SIZE_Y;
	DISPLAY = c.getContext("2d"); //global
	//PLOT_SCALE = (DISP_SIZE/2-BUFFER);

	var n = NBINS;
	BIN_WIDTH = 2*X_MAX/(n-1);
	for(n = 0; n<NBINS; n++ ){
		BINS[n] = -X_MAX + n*BIN_WIDTH;
		HIST[n] = 0.0;
	}
	HIST_MAX = 0.0;
}

function reset(){
	DISPLAY.clearRect(0,0,DISP_SIZE_X,DISP_SIZE_Y);
	//drawSun();
}

function updateHistogram(x){
	//add points to bin
	var	len = x.length;
	var idx;
	var i;
	for(i=0; i<len;i++){
		idx = Math.floor( (x[i]+X_MAX)/BIN_WIDTH );
		if(idx >=0 && idx < NBINS){
			HIST[idx]++;
		}
	}

	for(i=0; i<NBINS;i++){
		if (HIST[i] > HIST_MAX){
			HIST_MAX = HIST[i];
		}
	}
	
	for(i=0; i<NBINS; i++){
		DISPLAY.beginPath();
		DISPLAY.fillStyle="black";
		DISPLAY.arc(
			(i+0.5)/NBINS*DISP_SIZE_X, //x position
			(1.0-HIST[i]/HIST_MAX)*DISP_SIZE_Y,     //y position
			4.0, //radius
			0.0, PI2 //theta range
		);
		DISPLAY.closePath();
		DISPLAY.fill();
	}

}

</script>
</head>

<body onload="initialize()">

<button onClick='go()'>Start</button>
<button onClick="stop()">Stop</button>
<button onClick="reset()">Reset</button>
<div id='DATA'></div>
<br />
<canvas id="DISPLAY" style="border:1px solid #c3c3c3;/*background-color:black;*/">No HTML5!</canvas>

</body>
</html>